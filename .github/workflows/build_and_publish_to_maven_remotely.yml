name: Build and Publish to Maven Remotely

on:
  workflow_call:
    inputs:
      package-name:
        description: "Package name"
        type: string
        required: true
      destination-repository:
        description: "Publishing destination repository"
        type: string
        required: true

jobs:
  publish:
    name: Build and Publish to Maven Remotely
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: false

      - name: Setup secrets
        run: bash ./.github/scripts/setup_secrets.sh "${{ secrets.GOOGLEDRIVE_CLIENT_ID}}"

      - name: Set useLocalProjects flag
        run: echo useLocalProjects=true >> local.properties

      - name: "Setup target repository: ${{ inputs.destination-repository }}"
        run: bash ./.github/scripts/setup_publishing_repository_property.sh ${{ inputs.destination-repository }}

      - name: Release build
        run: ./gradlew ${{ inputs.package-name }}:assembleRelease

        # Runs upload, and then closes & releases the repository
      - name: Publish to MavenCentral
        if: ${{ vars.PACKAGE_PUBLISHING_ENABLED == 'true' && inputs.destination-repository == 'release' }}
        run: ./gradlew ${{ inputs.package-name }}:publishReleasePublicationToSonatypeRepository --max-workers 1 closeAndReleaseSonatypeStagingRepository
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SONATYPE_STAGING_PROFILE_ID: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}

      # Runs upload to the snapshot repository
      - name: Publish to snapshot area
        if: ${{ vars.PACKAGE_PUBLISHING_ENABLED == 'true' && inputs.destination-repository == 'snapshot' }}
        run: ./gradlew ${{ inputs.package-name }}:publishReleasePublicationToSonatypeRepository --max-workers 1
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SONATYPE_STAGING_PROFILE_ID: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}
